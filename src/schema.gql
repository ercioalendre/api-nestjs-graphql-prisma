# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  email: String!
  name: String!
  role: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  isActiveChangedAt: DateTime
  isActiveChangedBy: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type GetManyUserResponseOutputDto {
  data: [User!]!
  currentPage: Int!
  perPage: Int!
  lastPage: Int!
  totalRecords: Int!
}

type CreateOneUserResponseOutputDto {
  id: ID!
  email: String!
  name: String!
  role: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  isActiveChangedAt: DateTime
  isActiveChangedBy: String
}

type GetOneUserResponseOutputDto {
  id: ID!
  email: String!
  name: String!
  role: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  isActiveChangedAt: DateTime
  isActiveChangedBy: String
}

type DeleteOneUserResponseOutputDto {
  id: ID!
  email: String!
  name: String!
  role: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  isActiveChangedAt: DateTime
  isActiveChangedBy: String
}

type UpdateOneUserResponseOutputDto {
  id: ID!
  email: String!
  name: String!
  role: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  isActiveChangedAt: DateTime
  isActiveChangedBy: String
}

type Query {
  healthCheck: String!
  getOneUserByIdQuery(id: String!): GetOneUserResponseOutputDto!
  getManyUserQuery(page: Int, perPage: Int, filterBy: String, filterValue: String, sortBy: String, sortOrder: String): GetManyUserResponseOutputDto!
}

type Mutation {
  createOneUserMutation(createOneUserInput: CreateOneUserInput!): CreateOneUserResponseOutputDto!
  updateOneUserMutation(id: String!, updateOneUserInput: UpdateOneUserInput!): UpdateOneUserResponseOutputDto!
  deleteOneUserByIdQuery(id: String!): DeleteOneUserResponseOutputDto!
}

input CreateOneUserInput {
  email: String!
  name: String!
  role: String!
}

input UpdateOneUserInput {
  email: String
  name: String
  role: String
}